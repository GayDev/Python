# -*- coding: utf-8 -*-
"""
-------------------------------------------------
Задача C4-101.
Решение на языке Python 3.
-------------------------------------------------
101) (А.А. Богданов – Danov1901 №27) На вход 
программы поступает последовательность из N целых 
положительных чисел. Рассматриваются все пары 
различных элементов последовательности (элементы 
пары не обязаны стоять в последовательности рядом, 
порядок элементов в паре неважен). Необходимо 
определить такую максимальную сумму элементов пары, 
чтобы суммы элементов пары и их индексов были кратны 
3. Если такой суммы не найдется, вывести «–1». 
Нумерация элементов начинается с 1.
Описание входных и выходных данных
В первой строке входных данных задаётся количество 
чисел N (1 ≤ N ≤ 10000). В каждой из последующих N 
строк записано одно натуральное число, не превышающее 
10000. В качестве результата программа должна вывести 
одно число: максимальную сумму пары кратную трём с 
суммой индексов кратной трём или «–1», если такой 
пары не нашлось.
Пример входных данных №1:
10 
1 2 3 4 5 6 7 8 9 10
Выходные данных для приведенного выше примера: 
18
найденная пара: (8; 10)
Пример входных данных №2: 
23 
36 16 15 15 17 16 14 15 47 22 27 29 35 23 39 29 15 
25 16 35 28 45 26
Выходные данных для приведенного выше примера:
75
пара (a[9]=47; a[21]=28)
"""
import sys
save_stdin = sys.stdin
sys.stdin = open("in/101.in")

m2 = -10001
m = [ [-10001]*3 for _ in range(3) ]

n = int( input() )
for i in range(1,n+1):
  a = int( input() )
  s = a % 3
  t = i % 3
  if s == 0 and t == 0:
    if a > m[0][0]:
      m2 = m[0][0] # сохраняем второй максимум для (0;0);
    elif a > m2: 
      m2 = a
  if m[s][t] < a:
    m[s][t] = a

r = max(m[0][0] + m2, 
        m[0][1] + m[0][2],
        m[1][0] + m[2][0],
        m[1][2] + m[2][1], 
        m[1][1] + m[2][2])
if r > 0:
  print( r )
else:
  print( -1 )

sys.stdin = save_stdin