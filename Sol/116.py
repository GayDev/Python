# -*- coding: utf-8 -*-
"""
-------------------------------------------------
Задача C4-116.
Решение на языке Python 3.
-------------------------------------------------
116) (Е. Джобс) На вход программы поступает последовательность 
из N целых положительных чисел. Рассматриваются все пары 
различных элементов последовательности (элементы пары не 
обязаны стоять в последовательности рядом, порядок элементов 
в паре неважен). Необходимо определить пару с максимальной 
разностью, элементы которой находятся на расстоянии кратном K. 
Если таких пар несколько, вывести любую.
Описание входных и выходных данных 
В первой строке входных данных задаётся количество чисел N и 
значение K (K+1 ≤ N ≤ 1000). В каждой из последующих N строк 
записано одно натуральное число, не превышающее 10000. 
В качестве результата программа должна вывести пару чисел, 
соответствующих условию задачи.
Пример входных данных:
8 3
1
90
3
81
89
4
71
7
Пример выходных данных для приведённого выше примера входных 
данных:
90 7
"""
import sys
save_stdin = sys.stdin
sys.stdin = open("in/116.in")

N, K = map(int, input().split())
ma, mi = [], []
for i in range(K):
  x = int(input())
  ma.append(x)
  mi.append(x)

max1, max2, maxDiff = 0, 0, -1 # разность может быть 0
for i in range(N - K):
  x = int(input())
  r = i % K
  if x - mi[r] > maxDiff:
    max1, max2, maxDiff = mi[r], x, x - mi[r]   
  if ma[r] - x > maxDiff:
    max1, max2, maxDiff = ma[r], x, ma[r] - x    
  if x > ma[r]:
    ma[r] = x
  if x < mi[r]:
    mi[r] = x

print(max1, max2)

sys.stdin = save_stdin